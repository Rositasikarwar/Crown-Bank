{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roshi\\\\Downloads\\\\GRIPMAR21-main\\\\GRIPMAR21-main\\\\src\\\\Container\\\\Transfer.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from \"react\";\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport firebaseDb from '../Firebase';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    overflow: 'hidden',\n    marginTop: 60,\n    padding: theme.spacing(0, 3)\n  },\n  paper: {\n    maxWidth: 400,\n    margin: `${theme.spacing(1)}px auto`,\n    padding: theme.spacing(2)\n  }\n}));\n\nconst History = () => {\n  _s();\n\n  const classes = useStyles();\n  const initialFieldValues = {\n    senderEmail: '',\n    receiverEmail: '',\n    amount: '',\n    time: ''\n  };\n  var [values, setValues] = useState(initialFieldValues);\n\n  const handleInputChange = e => {\n    var {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const addOrEditTransfer = obj => {\n    values.time = moment().valueOf().toString();\n    firebaseDb.child('Transactions').push(obj, err => {\n      if (err) console.log(err);\n    }).then(() => {\n      alert('Transfered Succesfully');\n    }).catch(error => {\n      alert(error.messagge);\n    });\n  };\n\n  const handleTransfer = e => {\n    if (values.amount === 0 || values.amount < 0) {\n      alert('Invalid Amount');\n      return;\n    }\n\n    e.preventDefault();\n    addOrEditTransfer(values);\n  }; //  const handleTransfer = async () => {\n  //     if (values.amount == 0 || values.amount < 0){\n  //       alert('Invalid Amount');\n  //       return\n  //     }\n  //     e.preventDefault();\n  //     addOrEditTransfer(values)\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        wrap: \"nowrap\",\n        spacing: 2,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              variant: \"filled\",\n              autoFocus: true,\n              margin: \"dense\",\n              id: \"name\",\n              label: \"Your Email\",\n              type: \"email\",\n              name: \"senderEmail\",\n              value: values.senderEmail,\n              onChange: handleInputChange,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              variant: \"filled\",\n              margin: \"dense\",\n              id: \"name\",\n              label: \"Friend Email\",\n              type: \"email\",\n              name: \"receiverEmail\",\n              value: values.receiverEmail,\n              onChange: handleInputChange,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              variant: \"filled\",\n              margin: \"dense\",\n              id: \"name\",\n              label: \"Amount\",\n              name: \"amount\",\n              value: values.amount,\n              onChange: handleInputChange,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              onClick: handleTransfer,\n              children: \"Transfer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(History, \"CJWHIEeJa5AfIwWs2muF3gbQJbo=\", false, function () {\n  return [useStyles];\n});\n\n_c = History;\nexport default History;\n\nvar _c;\n\n$RefreshReg$(_c, \"History\");","map":{"version":3,"sources":["C:/Users/roshi/Downloads/GRIPMAR21-main/GRIPMAR21-main/src/Container/Transfer.js"],"names":["React","useState","Paper","makeStyles","Grid","Button","Typography","TextField","firebaseDb","moment","useStyles","theme","root","flexGrow","overflow","marginTop","padding","spacing","paper","maxWidth","margin","History","classes","initialFieldValues","senderEmail","receiverEmail","amount","time","values","setValues","handleInputChange","e","name","value","target","addOrEditTransfer","obj","valueOf","toString","child","push","err","console","log","then","alert","catch","error","messagge","handleTransfer","preventDefault"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState } from \"react\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport firebaseDb from '../Firebase';\r\nimport moment from 'moment';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    overflow: 'hidden',\r\n    marginTop: 60,\r\n    padding: theme.spacing(0, 3),\r\n  },\r\n  paper: {\r\n    maxWidth: 400,\r\n    margin: `${theme.spacing(1)}px auto`,\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\n\r\n\r\nconst History = () => {\r\n\r\n  const classes = useStyles();\r\n\r\n  const initialFieldValues = {\r\n    senderEmail: '',\r\n    receiverEmail: '',\r\n    amount: '',\r\n    time: ''\r\n  }\r\n\r\n  var [values, setValues] = useState(initialFieldValues)\r\n\r\n  const handleInputChange = e => {\r\n    var { name, value } = e.target\r\n    setValues({\r\n      ...values,\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  const addOrEditTransfer = obj => {\r\n    values.time = moment().valueOf().toString();\r\n    firebaseDb.child('Transactions').push(\r\n      obj,\r\n      err => {\r\n        if (err)\r\n          console.log(err)\r\n      }\r\n    ).then(() => {\r\n\r\n      alert('Transfered Succesfully');\r\n    })\r\n      .catch((error) => {\r\n        alert(error.messagge);\r\n      });\r\n  }\r\n\r\n  const handleTransfer = e => {\r\n    if (values.amount === 0 || values.amount < 0){\r\n      alert('Invalid Amount');\r\n      return\r\n    }\r\n    e.preventDefault();\r\n    addOrEditTransfer(values)\r\n\r\n  }\r\n\r\n//  const handleTransfer = async () => {\r\n//     if (values.amount == 0 || values.amount < 0){\r\n//       alert('Invalid Amount');\r\n//       return\r\n//     }\r\n//     e.preventDefault();\r\n//     addOrEditTransfer(values)\r\n// }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <Grid container wrap=\"nowrap\" spacing={2}>\r\n          <Grid item xs>\r\n            <Typography>\r\n\r\n              <TextField\r\n                required\r\n                variant=\"filled\"\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                label=\"Your Email\"\r\n                type=\"email\"\r\n                name=\"senderEmail\"\r\n                value={values.senderEmail}\r\n                onChange={handleInputChange}\r\n                fullWidth\r\n              />\r\n\r\n\r\n              <TextField\r\n                required\r\n                variant=\"filled\"\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                label=\"Friend Email\"\r\n                type=\"email\"\r\n                name=\"receiverEmail\"\r\n                value={values.receiverEmail}\r\n                onChange={handleInputChange}\r\n                fullWidth\r\n              />\r\n\r\n\r\n              <TextField\r\n                required\r\n                variant=\"filled\"\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                label=\"Amount\"\r\n                name=\"amount\"\r\n                value={values.amount}\r\n                onChange={handleInputChange}\r\n                fullWidth\r\n              />\r\n\r\n              {/* <Button color=\"primary\" onClick={handleTransfer}>\r\n                Cancel\r\n            </Button> */}\r\n              <Button color=\"primary\" onClick={handleTransfer}>\r\n                Transfer\r\n            </Button>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default History;"]},"metadata":{},"sourceType":"module"}